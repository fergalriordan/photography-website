---
interface ImageItem {
  src: string;
  alt: string;
}

interface Props {
  title: string;
  images: ImageItem[];
  galleryUrl: string;
  description?: string[]; 
  class?: string;
}

const {
  title,
  images,
  galleryUrl,
  description = ["Explore this photo gallery"], 
  class: extraClass = "",
} = Astro.props as Props;
---

<section class={`destination-section w-full py-6 bg-background px-4 ${extraClass} scroll-mt-16`}>
  <!-- Banner -->
  <div class="text-center mb-4">
    <h2 class="text-xl md:text-4xl text-text">{title}</h2>
  </div>

  <!-- Horizontal Scrollable Row with Arrows -->
  <div class="relative group">
    <!-- Left Arrow Button -->
    <button
      type="button"
      aria-label="Previous slide"
      data-arrow="prev"
      class="absolute left-2 top-1/2 -translate-y-1/2 p-1 rounded-full bg-transparent hover:bg-white/20 transition-opacity transition-colors opacity-0 z-10"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6 text-white"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        stroke-width="2"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7"
        ></path>
      </svg>
    </button>

    <!-- Right Arrow Button -->
    <button
      type="button"
      aria-label="Next slide"
      data-arrow="next"
      class="absolute right-2 top-1/2 -translate-y-1/2 p-1 rounded-full bg-transparent hover:bg-white/20 transition-opacity transition-colors opacity-0 z-10"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6 text-white"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        stroke-width="2"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7"
        ></path>
      </svg>
    </button>

    <!-- Floating Gallery Button -->
    <div class="gallery-button absolute top-4 right-4 z-20 opacity-0 transition-opacity duration-300">
      <a
        href={galleryUrl}
        class="bg-gray-dark/70 backdrop-blur-sm text-white px-4 py-2 rounded-full text-sm font-medium hover:bg-black/80 transition-all duration-300 flex items-center gap-2 shadow-lg"
      >
        <span>View Gallery</span>
        <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>

    <!-- Centered Text Overlay -->
    <div class="absolute inset-0 flex items-center justify-center z-15 pointer-events-none">
      <a
        href={galleryUrl}
        class="overlay-text bg-gray-dark/60 hover:bg-gray-dark/80 text-accent-light px-4 py-3 text-center w-64 max-w-[80%] md:w-96 mx-4 transition-all duration-300 cursor-pointer opacity-0 transform translate-y-4 pointer-events-auto"
      >
        {description.map((paragraph) => (
          <p class="text-sm md:text-base italic mb-2 last:mb-0">{paragraph}</p>
        ))}
      </a>
    </div>

    <!-- Scrollable Container -->
    <div
      class="scroll-container overflow-x-auto scrollbar-hide snap-x snap-mandatory"
      data-scroll-target
    >
      <div class="grid auto-cols-max grid-flow-col gap-2 px-2">
        {
          images.map(({ src, alt }) => (
            <img
              src={src}
              alt={alt}
              class="object-cover snap-center h-[30rem] md:h-[35rem]"
            />
          ))
        }
      </div>
    </div>
  </div>
</section>

<script type="module" src="/src/scripts/destinationSection.ts"></script>